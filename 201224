from fastapi import FastAPI
from pydantic import BaseModel
from typing import List

app = FastAPI()

# Модель данных для пользователя
class User(BaseModel):
    id: int
    name: str
    email: str

# Фейковая база данных
users_db: List[User] = []

@app.get("/")
def read_root():
    return {"message": "Добро пожаловать в API!"}

@app.get("/users", response_model=List[User])
def get_users():
    return users_db

@app.post("/users", response_model=User)
def create_user(user: User):
    users_db.append(user)
    return user

@app.get("/users/{user_id}", response_model=User)
def get_user(user_id: int):
    for user in users_db:
        if user.id == user_id:
            return user
    return {"error": "Пользователь не найден"}

@app.delete("/users/{user_id}")
def delete_user(user_id: int):
    global users_db
    users_db = [user for user in users_db if user.id != user_id]
    return {"message": "Пользователь удален"}
